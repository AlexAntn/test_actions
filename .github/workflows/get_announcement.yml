name: webhook testing announcements



on: 
    repository_dispatch:
        types: [announcement_launched]
jobs:
  myEvent:
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v2

        - name: populate the DB
          env:
            PAYLOAD_CONTEXT: ${{ toJson(github.event.client_payload) }}
          run: |
                if [ "${{ github.event.client_payload.type }}" == "announcement_launched" ]
                then
                  echo $PAYLOAD_CONTEXT > temp.txt
                  echo $(cat temp.txt)
                  sed -nr 's/.*"id": "(.*)", "image".*/\1/p' <temp.txt >ID.txt
                  echo $(cat ID.txt)
                  sed -nr 's/.*"title": "(.*)", "type".*/\1/p' <temp.txt >title.txt
                  echo $(cat title.txt)
                  sed -nr 's/.*"date": "(.*)", "description".*/\1/p' <temp.txt >date.txt
                  echo $(cat date.txt)
                  sed -nr 's/.*"summary": "(.*)", "title".*/\1/p' <temp.txt >summary.txt
                  echo $(cat summary.txt)
                  sed -nr 's/.*"description": "(.*)", "id".*/\1/p' <temp.txt >temp2.txt
                  sed ':a;N;$!ba;s/\\r//g' < temp2.txt > description.txt
                  echo $(cat description.txt)
                  echo '{' >> test.json
                  echo "\"id\"            : \"$(cat ID.txt)\"," >> test.json
                  echo "\"title\"         : \"$(cat title.txt)\"," >> test.json
                  echo "\"date\"          : \"$(cat date.txt)\"," >> test.json
                  echo "\"summary\"       : \"$(cat summary.txt)\"," >> test.json
                  echo "\"description\"   : \"$(cat description.txt)\"," >> test.json
                  if [[ "${{ github.event.client_payload.release }}" == "true" ]]
                  then
                    echo '"image"         : "default image for release"' >> test.json
                  else
                    echo '"image"         : "default image for announcement"' >> test.json
                  fi
                  echo '}' >> test.json
                fi
                
#                  awk -v ORS='\\n' '1' temp.txt > temp1.txt
#                  sed 's/\r//g' temp1.txt > temp2.txt

        - name: commit the file
          run: |
                if [ "${{ github.event.client_payload.type }}" == "announcement_launched" ]
                then
                  git config --local user.email "actions@github.com"
                  git config --local user.name "GitHub Action"
                  git add test.json
                  git commit -m "updated announcement file"
                fi


        - name: push changes
          uses: ad-m/github-push-action@master
          with:
            github_token: ${{ secrets.GITHUB_TOKEN }}






